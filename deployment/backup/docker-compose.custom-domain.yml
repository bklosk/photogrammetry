services:
  app:
    build: ..
    container_name: resilience-api
    restart: unless-stopped
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
    networks:
      - caddy_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  caddy:
    image: caddy:latest
    container_name: photogrammetry-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile.custom-domain:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
      - ../logs:/var/log/caddy
    environment:
      - CADDY_LOG_LEVEL=INFO
    networks:
      - caddy_network
    depends_on:
      app:
        condition: service_healthy
    command: sh -c "apk add --no-cache curl && caddy run --config /etc/caddy/Caddyfile --adapter caddyfile"
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:80/health || curl -f https://localhost:443/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

networks:
  caddy_network:
    driver: bridge

volumes:
  caddy_data:
    external: true
  caddy_config:
