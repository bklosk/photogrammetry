services:
  app:
    build: ..
    container_name: resilience-api
    restart: unless-stopped
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health/ready')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  caddy:
    image: caddy:latest
    container_name: photogrammetry-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile.production:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - CADDY_LOG_LEVEL=WARN
    networks:
      - app_network
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "caddy", "version"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

networks:
  app_network:

volumes:
  caddy_data:
  caddy_config: